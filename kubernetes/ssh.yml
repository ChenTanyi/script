---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ssh-init
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: ssh-init
rules:
  - apiGroups:
      - ""
    resources:
      - "secrets"
    verbs:
      - "create"
      - "get"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: ssh-init
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: ssh-init
subjects:
  - kind: ServiceAccount
    name: ssh-init
---
apiVersion: batch/v1
kind: Job
metadata:
  name: ssh-init
spec:
  template:
    spec:
      serviceAccountName: ssh-init
      containers:
        - name: init
          image: alpine:3.14
          command:
            - sh
          args:
            - -c
            - apk add curl openssh-keygen && curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x ./kubectl && mv kubectl /usr/bin && ( kubectl get secret ssh-key || ( rm -rf /root/.ssh/ && ssh-keygen -t rsa -N '' -f /root/.ssh/id_rsa && kubectl create secret generic ssh-key --from-file=/root/.ssh/id_rsa --from-file=/root/.ssh/id_rsa.pub && cat /root/.ssh/id_rsa.pub ))
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssh-init
data:
  init.sh: |
    echo "set -a" > /etc/profile.d/set_env.sh
    env | egrep -v "^(HOME=|USER=|MAIL=|LC_ALL=|LS_COLORS=|LANG=|HOSTNAME=|PWD=|TERM=|SHLVL=|LANGUAGE=|_=)" >> /etc/profile.d/set_env.sh
    echo "set +a" >> /etc/profile.d/set_env.sh

    cd $(dirname "$0")
    mkdir -p /root/.ssh/
    cp authorized_keys /root/.ssh/

    export DEBIAN_FRONTEND=noninteractive
    apt-get update
    apt-get install -y openssh-server
    mkdir -p /var/run/ssh /run/sshd
    echo 'root:123' | chpasswd
    sed 's/PermitRootLogin without-password/PermitRootLogin yes/' -i /etc/ssh/sshd_config
    /usr/sbin/sshd

    cd /tmp
    apt-get install -y wget tar
    wget https://github.com/yudai/gotty/releases/download/v1.0.1/gotty_linux_amd64.tar.gz
    tar zxf gotty_linux_amd64.tar.gz
    rm gotty_linux_amd64.tar.gz
    chmod +x gotty
    mv gotty /usr/bin
    gotty -w --reconnect bash

  authorized_keys: |

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ssh
spec:
  selector:
    matchLabels:
      app: ssh
  template:
    metadata:
      labels:
        app: ssh
    spec:
      containers:
        - name: ssh
          image: debian # python,golang,node,maven
          args:
            - bash
            - /app/init.sh
          volumeMounts:
            - mountPath: /app
              name: init
            - mountPath: /root/.ssh/id_rsa
              name: key
              subPath: id_rsa
            - mountPath: /root/storage
              name: storage
      volumes:
        - name: init
          configMap:
            name: ssh-init
        - name: key
          secret:
            secretName: ssh-key
            defaultMode: 0600
        - name: storage
          persistentVolumeClaim:
            claimName: storage
---
apiVersion: v1
kind: Service
metadata:
  name: ssh
spec:
  type: NodePort
  selector:
    app: ssh
  ports:
  - port: 22
    targetPort: 22
